module.exports = {
  SERVER_ERROR: "Something went wrong, please try again later",
  PASSWORD_CHANGED: "Password changed successfully",
  USER_VERIFIED: "User verified successfully",
  USER_DELETED: "User account deleted successfully",
  CODE_SENT: "Code sent successfully",
  USER_CREATED: "Account created successfully",
  MAXIMUM_CHILDS: "Maximum 5 childs are allowed",
  MAX_CHILD_EXEPTION: "MaxChildException",
  ACCESS_TOKEN_REQUIRED: "Access token is required",
  ACCESS_TOKEN_EXCEPTION: "AccessTokenException",
  PASSWORD_UPPERCASE_VALIDATION:
    "Password should contain atleast one uppercase letter",
  CHILD_NOT_FOUND: "No child found with provided details",
  WRONG_CHILD: "Given user is not the child of current parent",
  CODE_SENT_ON_EMAIL:
    "A code has been sent to the registered email address for confirming password change.",
  CHORES_CREATED: "Chore created successfully",
  CHORE_MARK_AS_COMPLETED: "chore mark as completetd",
  Error_OF_CHORE_COMPLETION: "cant complete this chore",
  NOT_AUTHORIZED_EXCEPTION: "NotAuthorizedException",
  ACCESS_TOKEN_EXPIRED: "Access Token has expired",
  CHORE_MARK_AS_COMPLETED_UPDATED: "chore mark as completetd updated",
  FORBIDDEN_ACCESS: "You don't have permission to access this resource.",
  FORBIDDEN_ACCESS_EXCEPTION: "ForbiddenAccessException",
  IDENTITY_VERFICATION_DETAILS:
    "Identity verfication details added successfully",
  IDENTITY_VERFICATION_ALREADY_DONE: "Identity verification already done",
  AGE_VALIDATION: "Must be at leat 18 years old to open a project account",
  ACCOUNT_DETAILS_NOT_FOUND: "Account details not found",
  USER_NOT_FOUND: "User not found",
  SAME_AC_TRANSFER: "Cannot move money in same account",
  FROM_ACCOUNT_NOT_LINKED:
    "Sender wallet not associated with your project account",
  TO_ACCOUNT_NOT_LINKED:
    "Receiver wallet not associated with your project account",
  CHILD_ACCOUNT_CREATED_SUCCESSFULLY: "Ordered child card successfully",
  FUNDING_SOURCE_NOT_AVAILABLE:
    "Funding source feature is not available right now",
  NO_WALLET_FOUND: "No wallet found for the user",
  NO_CHILD_FOUND: "No child account found for the user",
  CHILD_ACCOUNT_ERROR: "Error while creating child account",
  GALILEO_CREATE_ACCOUNT_ERROR: "Error while creating account",
  GALILEO_CREATE_ACCOUNT_EXCEPTION: "GalileoErrorException",
  NO_PLAN_FOUND: "No Plan Found",
  CHILD_ACCOUNT_EXISTS: "Account already exists for this child",
  CHILD_ACCOUNT_EXISTS_EXCEPTION: "GalileoAccountExistsException",
  CHILD_ACCOUNT_LIMIT_EXCEEDED: "Maximum number of child accounts exceeded",
  FUNDING_SOURCE_LINKED: "Funding source linked successfully",
  INVALID_ACCOUNT: "Invalid account type!",
  USER_ACC_NOT_FOUND: "User account not found!",
  NO_MESSAGES_FOUND: "No messages found",
  QUEUE_PROCESSED: "Queue processed",
  ERROR_PROCESSING_QUEUE: "Error while processing queue",
  WALLET_BAL_NOT_FOUND: "Wallet balance details not found",
  GALILEO_WEBHOOK_TYPE_REQUIRED: "Type field not found in galileo webhook",
  PLAID_NO_ACCOUNT_LINKED: "No linked account found",
  PARENT_NOT_FOUND: "Parent not found",
  PARENT_WALLET_NOT_FOUND: "Parent wallet not found",
  ERROR_FETCH_PARENT_WALLET: "Unable to fetch parent wallet balance",
  CONFIG_NOT_FOUND: "No config found",
  INCORRECT_DAY: "Incorrect day",
  INSUFFICENT_BALANCE: "Insufficent balance in parent's wallet",
  BASE_URL_UNDEFINED: "Base url not defined",
  ENV_NOT_FOUND: "Environment not found",
  CARD_ACTIVATED: "Card activated successfully",
  API_KEY_REQUIRED: "API key is required",
  API_KEY_EXCEPTION: "ApiKeyException",
  GOAL_CREATED: "Goal added successfully",
  GOAL_NOT_CREATED: "Unable to create goal",
  ERROR_GOAL_COUNT: "No more than 10 goals can be created at a time",
  GOAL_UPDATED: "Goal update successfully",
  GOAL_NOT_UPDATED: "Unable to update goal",
  GOAL_NOT_FOUND: "No goal found",
  CHILD_ACCOUNT_NOT_FOUND: "Please order child card first!",
  CHILD_ACCOUNT_NOT_FOUND_EXCEPTION: "ChildAccountNotFoundException",
  INTERNATIONAL_TXNS_UPDATED: "International access updated successfully",
  CARD_LOCK_UPDATED: "Card locked successfully",
  CARD_UNLOCK_UPDATED: "Card unlocked successfully",
  REPORT_LOST_CARD: "Reported card as lost",
  GET_CARD_SETTINGS: "Fetched card settings successfully",
  PARENT_FUNDING_SOURCE_NOT_FOUND: "Parent funding source not found",
  WALLET_FUNDED_SUCCESSFULLY: "wallet loaded with funds successfully",
  AUTO_RELOAD_CONFIGURATION_UPDATED:
    "Wallet auto reload configuration updated successfully",
  NO_PRIMARY_FUNDING_SOURCE: "No funding source is marked as primary",
  goals: {
    NOT_EXIST: "Goal does not exist",
    ALREADY_CLOSED: "Goal already closed",
    NOT_ENOUGH_MONEY_TO_COMPLETE:
      "Not enough money saved in goal to mark it as completed",
    COMPLETED: "Goal marked as completed",
    delete_error: "Unable to delete goal",
    delete_success: "Goal deleted successfully",
    invalid_field: "Invalid field",
    inactive_goal_transfer_error: "Cannot transfer funds to inactive goal",
    closed_goal_transfer_error: "Cannot transfer funds to closed goal",
    not_completed_transfer_error: "Goal is not completed yet to make transfer",
    spending_transfer_success:
      "Goal amount transfered to spending account successfully",
  },
  card_settings: {
    daily_spending_limit_success: "daily spending limit updated successfully",
  },
  funding_source: {
    not_found: "Funding source not found",
    primay_delete_error: "Primary funding source can not be deleted",
    atleast_one_error: "Atleast one funding source is required",
    removed_success: "Funding source removed successfully",
    already_primary: "Funding source is already primary",
    mark_primary_success: "Funding source marked as primary successfully",
  },
  plaid: {
    exchange_public_token_error: "Unable to exchange public token",
  },
  accounts: {
    saving_ac_not_found: "Saving account not found",
    spending_ac_not_found: "Spending account not found",
    goal_ac_not_found: "Goal account not found",
    saving_transfer_not_allowed:
      "Transfer from saving is not allowed for you right now",
    not_type_found_error: "This type of transfer is not allowed",
    wallet_not_created_error: "Parent wallet not created yet",
    round_up_success: "Round up setup successfully",
  },
  cards: {
    not_order_yet: "No card ordered yet",
    already_activated: "Card already activated",
  },
  wallet: {
    not_sufficient_funds: "Not enough funds to transfer",
  },
  unauthorized: {
    exception: "NotAuthorizedException",
    message: "You are not authorized to access this endpoint",
  },
};
